{"version":3,"sources":["context/auth.js","component/Header.js","component/Login.js","component/Location.js","component/LoadProject.js","component/CreateProject.js","context/AuthRoute.js","App.js","ApolloProvider.js","index.js"],"names":["initialState","user","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","accessToken","Header","useContext","className","href","id","to","onClick","LOGIN_MUTATION","gql","Login","context","useState","errors","setErrors","email","password","values","setValues","onChange","e","target","name","useMutation","update","_","result","data","loginUser","onError","err","console","log","variables","loading","style","width","padding","onSubmit","preventDefault","autoComplete","required","htmlFor","FETCH_LOCATION_QUERY","GoogleApiWrapper","apiKey","history","push","useQuery","google","zoom","loadLocations","map","lod","i","key","lat","latitude","lng","longitude","text","location","LOAD_PROJECT_QUERY","LoadProject","errorPolicy","showDate","d","date","day","getDate","monthIndex","getMonth","year","getFullYear","isNaN","loadProject","item","title","contractorName","contractorAddress","budget","startDate","endDate","CREATE_PROJECT_MUTATION","CreateProject","contratorAddress","createProject","parseFloat","AuthRoute","Component","component","rest","render","App","exact","path","Location","httpLink","createHttpLink","uri","authLink","setContext","token","headers","Authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b6c535be.chunk.js","sourcesContent":["import React, { useReducer, createContext } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst initialState = {\r\n    user : null\r\n}\r\n\r\n\r\nif(localStorage.getItem('jwtToken')){\r\nconst decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\r\nif(decodedToken.exp * 1000 < Date.now()){\r\n    localStorage.removeItem('jwtToken');\r\n}else{\r\n    initialState.user = decodedToken;\r\n}\r\n\r\n\r\n}\r\n\r\nconst AuthContext = createContext({\r\n    user:null,\r\n    login:(userData) =>{},\r\n    logout:()=>{}\r\n})\r\n\r\nfunction authReducer(state, action){\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return{\r\n            ...state,\r\n            user:action.payload\r\n            }\r\n            case 'LOGOUT':\r\n                return{\r\n                    ...state,\r\n                    user:null\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nfunction AuthProvider(props){\r\n    const  [state, dispatch] = useReducer(authReducer,initialState);\r\n\r\n    function login(userData){\r\n        localStorage.setItem('jwtToken',userData.accessToken);\r\n        dispatch({\r\n            type:'LOGIN',\r\n            payload:userData\r\n        })\r\n    }\r\n\r\n    function logout(){\r\n        localStorage.removeItem('jwtToken');\r\n        dispatch({\r\n            type:'LOGOUT'\r\n        });\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n        value={{ user: state.user, login,logout }}\r\n        {...props}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nexport { AuthContext, AuthProvider }","import React,{useContext} from 'react';\r\nimport { AuthContext } from '../context/auth';\r\nimport {Link } from 'react-router-dom';\r\n\r\nfunction Header(){\r\n      const {user, logout} = useContext(AuthContext);\r\n      const menuBar = user ? (\r\n<header>\r\n<nav>\r\n    <div className=\"nav-wrapper container\">\r\n      <a href=\"https://48p1r2roz4.sse.codesandbox.io\" className=\"brand-logo\">React</a>\r\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n        <li><Link to={'/location'}>Locations</Link></li>\r\n        <li><Link to={'/projects'}>Projects</Link></li>\r\n        <li><Link onClick={logout} to=\"\">Logout</Link></li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n</header>\r\n        ):(\r\n          <header>\r\n<nav>\r\n    <div className=\"nav-wrapper container\">\r\n      <a href=\"https://48p1r2roz4.sse.codesandbox.io\" className=\"brand-logo\">React</a>\r\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n        <li><Link to=\"/\">Login</Link></li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n</header>\r\n        )\r\n        return  menuBar;\r\n}\r\n\r\nexport default Header;","import React,{ useContext, useState } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { AuthContext } from '../context/auth';\r\n\r\n\r\nconst LOGIN_MUTATION = gql`\r\n    mutation login(\r\n        $email:String!,\r\n        $password: String!\r\n        ){\r\n        loginUser(\r\n            user:{\r\n            email:$email,\r\n            password:$password\r\n            }\r\n        ){\r\n            accessToken message status\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nfunction Login(props){\r\n\r\n    const context = useContext(AuthContext);\r\n    const [errors, setErrors] = useState(false);\r\n    const [values,setValues] = useState({\r\n       email: '',\r\n       password: ''\r\n   });\r\n\r\n   const onChange = (e)=>{\r\n        //e.preventDefault();\r\n        setValues({...values,[e.target.name]: e.target.value});\r\n   }\r\n\r\n   const [loginUser, {loading}] = useMutation(LOGIN_MUTATION,{\r\n    update(_,result){\r\n        const userData =  result.data.loginUser;\r\n        context.login(userData);\r\n    },\r\n    onError(err){\r\n        console.log(err);\r\n       setErrors(true);\r\n    },\r\n    variables:values\r\n}) \r\n   const onSubmit = (e)=>{\r\n       e.preventDefault();\r\n       loginUser();\r\n   }\r\n   \r\n  \r\n\r\n        return(\r\n                      <main>\r\n                        <div className=\"container\">\r\n                            <div className=\"space-50\"></div>\r\n                            <div className=\"white form-wrapper\">\r\n                            \r\n                        <br />\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 m6 offset-m3\">\r\n                                <h5 className=\"title-color\">Hey, Welcome back.</h5>\r\n                                <p>Plug in your account detail below so we can open the gate for you!</p>\r\n                                <p className={errors ? 'red center white-text':'hide'} style={{width:'auto', padding:'10px 0'}}>\r\n                               {errors ? 'Invalid credentials':''\r\n                               }\r\n                               </p>\r\n                                <form onSubmit={onSubmit}>\r\n                                    <div className=\"row center\">\r\n                                        <div className=\"col s12 input-field\">\r\n                                            <input type=\"email\" name=\"email\" value={values.email} onChange={onChange} id=\"email\" autoComplete=\"off\" required/>\r\n                                        <label htmlFor=\"email\">Email Address</label>\r\n                                        </div>\r\n                                    \r\n                                        <div className=\"col s12 input-field\">\r\n                                            <input type=\"password\" name=\"password\" value={values.password} onChange={onChange} id=\"password\" autoComplete=\"off\" required/>\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                        </div>\r\n                                        <div className=\"col s12\">\r\n                                        <button className={loading ? 'btn btn-primary disabled':'btn btn-primary'}>Login</button>\r\n                                            </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n                \r\n        )\r\n    \r\n}\r\n\r\nexport default Login;\r\n","import React, {useContext } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nimport {AuthContext} from '../context/auth';\r\n\r\nconst FETCH_LOCATION_QUERY = gql`\r\n{\r\n  loadLocations{\r\n  latitude\r\n  location\r\n  longitude\r\n}\r\n}\r\n`;\r\n\r\nexport function Location(props){\r\n\r\n  const {user} = useContext(AuthContext);\r\n  if(!user){\r\n    props.history.push('/');\r\n}\r\n  \r\n  const {loading, data} = useQuery(FETCH_LOCATION_QUERY);\r\n         return(\r\n          loading ? (\r\n            <p>Please wait we are loading your data</p>\r\n          ):(\r\n            <main>\r\n               <Map google={props.google} zoom={14}>\r\n              \r\n            {\r\n              data.loadLocations.map(function(lod,i){\r\n              return(\r\n                <Marker key={i}\r\n                  lat={lod.latitude}\r\n                  lng={lod.longitude}\r\n                  text={lod.location}\r\n                />\r\n              )\r\n              })\r\n              }\r\n              </Map>\r\n            </main>\r\n\r\n          )\r\n          \r\n        );\r\n    }\r\n\r\n  export default   GoogleApiWrapper({\r\n      apiKey: ('AIzaSyCn3U0hO2MEc3A1GA4cWmkJFD2HAGyvaGk'),\r\n    })(Location)","import React,{ useContext} from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../context/auth';\r\n\r\nconst LOAD_PROJECT_QUERY = gql`\r\n            {\r\n                loadProject{\r\n                budget\r\n                contractorName\r\n                contractorAddress\r\n                endDate\r\n                id\r\n                startDate\r\n                title\r\n                }\r\n            }\r\n            `;\r\n\r\n\r\n\r\nexport default function LoadProject(props){\r\n    const {user} = useContext(AuthContext);\r\n    const {loading,data} = useQuery(LOAD_PROJECT_QUERY,{errorPolicy:'ignore'});\r\n   \r\n    if(!user){\r\n        props.history.push('/');\r\n    }\r\n   \r\n   \r\n    const addProject = ()=>{\r\n        props.history.push('/create');\r\n    }\r\n\r\n    function showDate(d) {\r\n        const date = new Date(d);\r\n        var monthNames = [\r\n          \"Jan\", \"Feb\", \"Mar\",\r\n          \"Apr\", \"May\", \"Jun\", \"Jul\",\r\n          \"Aug\", \"Sep\", \"Oct\",\r\n          \"Nov\", \"Dec\"\r\n        ];\r\n      var dt = '';\r\n        var day = date.getDate();\r\n        var monthIndex = date.getMonth();\r\n        var year = date.getFullYear();\r\n      if(isNaN(day)){\r\n            dt = d;\r\n      }else{\r\n          dt = day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n      }\r\n        return dt;\r\n      }\r\n\r\n    return(\r\n\r\n<div className=\"container\">\r\n    <div className=\"row\">\r\n        <div className=\"col s12 m12\">\r\n\r\n      <div className=\"space-50\"></div>\r\n      <h5>Projects <Link to={'/create'} onClick={addProject} className=\"btn right btn-secondary\">Create Project</Link></h5>\r\n      <br /><br />\r\n  \r\n          {\r\n              loading ? (\r\n                  <p>Please wait we are loading the projects</p>\r\n              ):(\r\n                <table className=\"striped\">\r\n                <thead>\r\n                    <tr><th>#</th><th>Project</th><th>Contractor</th><th>Contractor Address</th><th>Budget</th><th>Start Date</th><th>End Date</th></tr>\r\n                </thead>\r\n                <tbody>\r\n                 {\r\n                    data.loadProject.map((item,i)=>{\r\n                      return(\r\n                  <tr className=\"hoverable\" key={i}><td>{item.id}</td><td>{item.title}</td>\r\n                  <td>{item.contractorName}</td><td>{item.contractorAddress}</td><td>{item.budget}</td>\r\n                  <td>{showDate(item.startDate)}</td><td>{showDate(item.endDate)}</td></tr>\r\n                         \r\n                      )\r\n                    \r\n                    })\r\n          \r\n                  }\r\n          \r\n           \r\n           </tbody>\r\n           </table>\r\n            \r\n              )\r\n          \r\n              }\r\n</div>\r\n</div>\r\n    </div>\r\n\r\n    )\r\n}","import React,{ useContext, useState } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { AuthContext } from '../context/auth';\r\n\r\n\r\nconst CREATE_PROJECT_MUTATION = gql`\r\n\r\nmutation create($title:String,$budget:Decimal,$startDate:String,$endDate:String,$contratorName:String,$contratorAddress:String\r\n){\r\n    createProject(\r\n        project:{\r\n            title: $title,\r\n            budget: $budget,\r\n            startDate: $startDate,\r\n            endDate:$endDate,\r\n            contractorName:$contratorName,\r\n            contractorAddress:$contratorAddress\r\n        }\r\n    ){\r\n        message status\r\n    }\r\n}`;\r\n\r\nfunction CreateProject(props){\r\n\r\n    const { user } = useContext(AuthContext);\r\n    if(!user){\r\n        props.history.push('/');\r\n    }\r\n\r\n    const [values,setValues] = useState({\r\n        title: '',\r\n        budget: 0,\r\n        startDate:'',\r\n        endDate:'',\r\n        contractorName:'',\r\n        contratorAddress:'',\r\n    });\r\n\r\n    const [createProject, {loading}] = useMutation(CREATE_PROJECT_MUTATION,{\r\n        update(_,result){\r\n            if(result){\r\n                props.history.push('/projects');\r\n            }\r\n\r\n        },\r\n        onError(err){\r\n          console.log(err);\r\n        },\r\n        variables:values\r\n    });\r\n\r\n\r\n    const onChange = (e)=>{\r\n        e.preventDefault();\r\n        setValues({...values,[e.target.name]: e.target.value});\r\n    }\r\n\r\n\r\n        const onSubmit = (e)=>{\r\n            e.preventDefault();\r\n            createProject();\r\n        }\r\n\r\n        return(\r\n<div className=\"container\">\r\n    <div className=\"space-50\"></div>\r\n    <div className=\"row\">\r\n        <div className=\"col s12 m12\">\r\n            <h5>Add Project</h5>\r\n        </div>\r\n    </div>\r\n    <form  onSubmit={onSubmit}>\r\n    <div className=\"row\">\r\n        <div className=\"col s12 m8 input-field\">\r\n            <input type=\"text\" name=\"title\" value={values.title} onChange={onChange}  id=\"title\" autoComplete=\"off\"  required/>\r\n            <label htmlFor=\"title\">Project Title</label>\r\n        </div>\r\n        <div className=\"col s12 m8 input-field\">\r\n            <input type=\"text\" name=\"contractorName\" value={values.contractorName} onChange={onChange}  id=\"contractorName\" autoComplete=\"off\"  required/>\r\n            <label htmlFor=\"contractorName\">Contractor Name</label>\r\n        </div>\r\n        <div className=\"col s12 m8 input-field\">\r\n            <input type=\"text\" name=\"contratorAddress\" value={values.contractorAddress} onChange={onChange}  id=\"contractorAddress\" autoComplete=\"off\"  required/>\r\n            <label htmlFor=\"contractorAddress\">Contractor Address</label>\r\n        </div>\r\n        <div className=\"col s12 m8 input-field\">\r\n            <input type=\"text\" id=\"budget\" name=\"budget\" onChange={onChange}  value={parseFloat(values.budget)} autoComplete=\"off\"  required/>\r\n            <label htmlFor=\"budget\">Budget</label>\r\n        </div>\r\n        <div className=\"col s12 m8 input-field\">\r\n            <input type=\"text\" id=\"start-date\" name=\"startDate\" value={values.startDate} onChange={onChange}  className=\"datepicker\" autoComplete=\"off\"  required/>\r\n            <label htmlFor=\"#start-date\">Start Date</label>\r\n        </div>\r\n        <div className=\"col s12 m8 input-field\">\r\n            <input type=\"text\" id=\"end-date\" name=\"endDate\" value={values.endDate} onChange={onChange} className=\"datepicker\" autoComplete=\"off\"  required/>\r\n            <label htmlFor=\"#end-date\">End Date</label>\r\n        </div>\r\n        \r\n        <div className=\"col s12 m8\">\r\n        <br />\r\n        <button className={loading ? 'btn btn-secondary disabled':'btn btn-secondary'}>Save Project</button>\r\n      \r\n        </div>\r\n        \r\n    </div>\r\n    </form>\r\n</div>  \r\n        )\r\n    }\r\n\r\nexport default CreateProject;","import React, { useContext } from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport  { AuthContext } from './auth';\r\n\r\nfunction AuthRoute({component: Component, ...rest}){\r\nconst { user } = useContext(AuthContext);\r\n\r\n\r\nreturn(\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n                user ? <Redirect to=\"/projects\"/> : <Component {...props}/>\r\n            }\r\n            />\r\n    )\r\n}\r\n\r\nexport default AuthRoute;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Header from './component/Header';\nimport Login from './component/Login';\nimport Location from './component/Location';\nimport { AuthProvider } from './context/auth';\nimport LoadProject from './component/LoadProject';\nimport CreateProject from './component/CreateProject';\nimport AuthRoute from './context/AuthRoute';\n\n\nclass App extends Component {\n\n  render(){\n  return (\n    <AuthProvider>\n      <Router>\n        <Header />\n        <Switch>\n        <AuthRoute exact path='/' component={Login}/>\n        <Route exact path='/location' component={Location}/>\n        <Route exact path='/projects' component={LoadProject}/>\n        <Route exact path='/create' component={CreateProject}/>\n        </Switch>\n      </Router>\n      </AuthProvider>\n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport App from './App';\r\nimport {ApolloProvider} from '@apollo/react-hooks';\r\nimport { setContext } from  'apollo-link-context';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n    uri:'https://frontendassesment20200204015954.azurewebsites.net/graphql'\r\n\r\n  });\r\n  \r\n  const authLink = setContext(() => {\r\n    const token = localStorage.getItem('jwtToken');\r\n    return {\r\n      headers: {\r\n        Authorization: token ? `${token}` : \"\"\r\n      }\r\n    }\r\n  });\r\n  \r\n  const client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache()\r\n  });\r\n\r\n\r\nexport default  (\r\n    <ApolloProvider client={client}>\r\n        <App />\r\n    </ApolloProvider>\r\n)","import ReactDOM from 'react-dom';\nimport './index.css';\nimport ApolloProvider from './ApolloProvider';\n\nReactDOM.render(ApolloProvider, document.getElementById('root'));"],"sourceRoot":""}